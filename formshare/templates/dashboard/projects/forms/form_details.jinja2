{% extends 'dashboard/page.jinja2' %}
{% import 'dashboard/macros/form.jinja2' as form %}

{% block titlesection %}{{ formDetails.form_name }}{% endblock titlesection %}

{% if request.h.get_setting(request,'use_timezones','False') == 'True' %}
    {% if selected_timezone == 'formshare' %}
        {% set timezone = system_timezone %}
    {% else %}
        {% if selected_timezone == 'user' %}
            {% set timezone = user_timezone.user_timezone %}
        {% else %}
            {% set timezone = projectDetails.project_timezone %}
        {% endif %}
    {% endif %}
{% else %}
    {% set timezone = None %}
{% endif %}

{% block css %}
    {{ super() }}
    {% if formDetails.form_type == 1 %}
        {% cssresource request,'formshare','switchery' %}
        {% cssresource request,'formshare','datepicker' %}
        {% cssresource request,'formshare','select2' %}
        {% if formDetails.form_geopoint != None %}
            {% cssresource request,'formshare','leaflet' %}
            {% cssresource request,'formshare','blueimp' %}
        {% endif %}
        {% cssresource request,'formshare','codemirror-ambiance' %}
        {% if formDetails.form_schema == None %}
            {% if formDetails.form_surveycolumns != None or formDetails.form_choicescolumns != None or formDetails.form_invalidcolumns != None %}
                {% cssresource request,'formshare','tour' %}
            {% endif %}
        {% endif %}
        <style>
            .remove-all-styles {
                all: unset;
            }
            span.select2-container {
                z-index:10050;
            }
        </style>
    {% else %}
        {% block form_css_other %}

        {% endblock form_css_other %}
    {% endif %}
{% endblock css %}

{% block topScripts %}
    <script>
        paceOptions = {
            ajax: {
                trackWebSockets: false
            }
        }
    </script>
    {{ super() }}
    {% if formDetails.form_type == 1 %}
        {% jsresource request,'formshare','switchery' %}
        {% jsresource request,'formshare','datepicker' %}
        {% jsresource request,'formshare','taphold' %}
        {% jsresource request,'formshare','select2' %}
        {% jsresource request,'formshare','clipboard' %}
        {% jsresource request,'formshare','bs-custom-file-input' %}
        {% jsresource request,'formshare','sse' %}
        {% if formDetails.form_geopoint != None %}
            {% jsresource request,'formshare','leaflet' %}
            {% jsresource request,'formshare','blueimp' %}
        {% endif %}
        {% if formDetails.form_schema != None %}
            {% jsresource request,'formshare','codemirror-r' %}
        {% else %}
            {% if formDetails.form_surveycolumns != None or formDetails.form_choicescolumns != None or formDetails.form_invalidcolumns != None %}
                {% jsresource request,'formshare','tour' %}
            {% endif %}
        {% endif %}
        {% if products|length > 0 %}
            {% jsresource request,'formshare','codemirror-shell' %}
        {% endif %}
    {% else %}
        {% block form_topscripts_other %}

        {% endblock form_topscripts_other %}
    {% endif %}
{% endblock topScripts %}

{% block breadcrumbs %}
    {% include 'dashboard/projects/forms/snippets/brdcrbs_frmdtls.jinja2' %}
{% endblock breadcrumbs %}

{% block mainsection %}
    {% if formDetails.form_type == 1 %}
        {{ form.display_errors(errors,True) }}
        <div class="row">
            <div class="col-lg-3">
                <div class="wrapper wrapper-content project-manager">
                    {% block form_tabs %}
                        {% include 'dashboard/projects/forms/snippets/info_tab.jinja2' %}
                        {% include 'dashboard/projects/forms/snippets/links_tab.jinja2' %}
                        {% if formDetails.form_schema != None %}
                            {% block form_tabs_with_repository %}
                                {% if projectDetails.access_type <= 4 %}
                                    {% include 'dashboard/projects/forms/snippets/repository_tab.jinja2' %}
                                {% endif %}
                            {% endblock form_tabs_with_repository %}
                        {% endif %}
                        {% include 'dashboard/projects/forms/snippets/files_tab.jinja2' %}
                        {% include 'dashboard/projects/forms/snippets/assistants_tab.jinja2' %}
                        {% include 'dashboard/projects/forms/snippets/groups_tab.jinja2' %}
                        {% if request.registry.settings['allow.partner.access'] == "True" %}
                            {% include 'dashboard/projects/forms/snippets/partners_tab.jinja2' %}
                        {% endif %}
                    {% endblock form_tabs %}
                    {% block form_tabs_extra %}

                    {% endblock form_tabs_extra %}
                </div>
            </div>
            <div class="col-lg-9">
                <div class="wrapper wrapper-content">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="m-b-md">
                                        <h2>{{ _('Form details') }}</h2>
                                    </div>

                                </div>
                            </div>
                            {% if assistants|length > 0 %}
                                {% include 'dashboard/projects/forms/snippets/form_details.jinja2' %}
                            {% endif %}
                            <div class="row m-t-sm">
                                <div class="col-lg-12">
                                    {% if assistants|length > 0 %}
                                        {% if formassistants|length + form_assistants_through_groups|length > 0 %}
                                            {% if formDetails.form_schema != None %}
                                                {% include 'dashboard/projects/forms/snippets/form_important_links.jinja2' %}
                                            {% endif %}
                                            {% if formDetails.form_geopoint != None %}
                                                {% include 'dashboard/projects/forms/snippets/form_map.jinja2' %}
                                            {% endif %}
                                            {% if formDetails.form_schema != None %}
                                                {% include 'dashboard/projects/forms/snippets/form_tasks.jinja2' %}
                                            {% endif %}
                                        {% else %}
                                            {% if projectDetails.access_type < 4 %}
                                                {% include 'dashboard/projects/forms/snippets/form_no_assistants.jinja2' %}
                                            {% endif %}
                                        {% endif %}
                                    {% else %}
                                        {% if projectDetails.access_type < 4 %}
                                            {% include 'dashboard/projects/snippets/project_no_assistants.jinja2' %}
                                        {% endif %}
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% if formDetails.form_schema != None %}
            {% include 'dashboard/projects/forms/snippets/api_examples.jinja2' %}
        {% else %}
            {% if formDetails.form_surveycolumns != None or formDetails.form_choicescolumns != None or formDetails.form_invalidcolumns != None %}
                {% include 'dashboard/projects/forms/snippets/data_columns.jinja2' %}
            {% endif %}
        {% endif %}
        {% include 'dashboard/projects/forms/snippets/export.jinja2' %}
        {% if projectDetails.access_type < 4 %}
            {% include 'dashboard/projects/forms/snippets/update_form.jinja2' %}
            {% include 'dashboard/projects/forms/snippets/upload_file.jinja2' %}
            {% include 'dashboard/projects/forms/snippets/add_assistant.jinja2' %}
            {% include 'dashboard/projects/forms/snippets/edit_assistant.jinja2' %}
            {% include 'dashboard/projects/forms/snippets/add_group.jinja2' %}
            {% include 'dashboard/projects/forms/snippets/edit_group.jinja2' %}
            {% if request.registry.settings['allow.partner.access'] == "True" %}
                {% include 'dashboard/projects/forms/snippets/link_partner.jinja2' %}
                {% if form_partners|length > 0 %}
                    {% include 'dashboard/projects/forms/snippets/edit_link_partner.jinja2' %}
                {% endif %}
            {% endif %}
            {% set upload_for_merging = true %}
            {% set parent_project = projectDetails.project_id %}
            {% set parent_form = formDetails.form_id %}
            {% set action_url = request.route_url('form_add',userid=projectDetails.owner,projcode=projectDetails.project_code) %}
            {% include 'dashboard/projects/forms/snippets/upload_form.jinja2' %}
            {% if formDetails.parent_form != None %}
                {% if formDetails.form_abletomerge == 0 %}
                    {% include 'dashboard/projects/forms/snippets/merge_errors.jinja2' %}
                {% endif %}
            {% endif %}
            {% if formDetails.form_schema == None %}
                {% if formDetails.form_repositorypossible == 0 %}
                    {% include 'dashboard/projects/forms/snippets/repository_errors.jinja2' %}
                {% endif %}
            {% endif %}
        {% endif %}
        {% include 'dashboard/projects/forms/snippets/product_error.jinja2' %}
        {% if formDetails.form_geopoint != None and formDetails.submissions > 0 and withgps > 0 %}
            {% include 'dashboard/projects/forms/snippets/submission_info.jinja2' %}
        {% endif %}
    {% else %}
        {% block form_mainsection_other %}

        {% endblock form_mainsection_other %}
    {% endif %}
{% endblock mainsection %}

{% block scripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>
    {{ super() }}
    {% block form_extra_imports %}

    {% endblock form_extra_imports %}
    {% if formDetails.form_type == 1 %}
        <script>
            $(document).ready(function() {

                $( "#editQRData" ).on( "click", function() {
                    location.href = "{{ request.route_url('project_edit_qr',userid=projectDetails.owner, projcode=projectDetails.project_code,_query={'next':request.url}) }}";
                } );

                {% if formDetails.form_schema == None %}
                    {% if formDetails.form_surveycolumns != None or formDetails.form_choicescolumns != None or formDetails.form_invalidcolumns != None %}
                        var tour = new Tour({
                            steps: [
                                {
                                    element: "#extra_columns",
                                    title: "{{ _('Data columns') }}",
                                    content: "{{ _('Your ODK form has extra columns. You can import these columns into the repository. Click on this button to see which columns you can import.') }}"
                                }
                            ],
                            backdrop: true,
                            backdropContainer: '#wrapper',
                            template: '<div class="popover" role="tooltip"> <div class="arrow"></div> <h3 class="popover-title"></h3> <div class="popover-content"></div> <div class="popover-navigation"> <div class="btn-group"> <button class="btn btn-sm btn-default" data-role="prev">&laquo; {{ _("Prev") }}</button> <button class="btn btn-sm btn-default" data-role="next">{{ _("Next") }} &raquo;</button> <button class="btn btn-sm btn-default" data-role="pause-resume" data-pause-text="{{ _("Pause") }}" data-resume-text="{{ _("Resume") }}">{{ _("Pause") }}</button> </div> <button class="btn btn-sm btn-default" data-role="end">{{ _("Close") }}</button> </div> </div>',
                        });
                        tour.init();
                        tour.start();
                    {% endif %}
                {% endif %}

                new ClipboardJS('.clipboard');
                let upload_started = false;
                let xform_update_started = false;
                $('#form_upload_file_form').submit(function() {
                    $(this).find("button[type='submit']").prop('disabled',true);
                    upload_started = true;
                });

                $('#upload_file').on('hidden.bs.modal', function () {
                    if (upload_started)
                        location.reload();
                });

                $('#form_update_form').submit(function() {
                    $(this).find("button[type='submit']").prop('disabled',true);
                    xform_update_started = true;
                });

                $('#update_form').on('hidden.bs.modal', function () {
                    if (xform_update_started)
                        location.reload();
                });
                {% if projectDetails.access_type < 4 %}
                    {% include 'dashboard/projects/forms/snippets/upload_form_js.jinja2' %}
                {% endif %}

                {% block odk_scripts %}
                    {% if formDetails.form_schema == None and formDetails.form_reptask != None and taskdata.rescode < 0%}
                        {% include 'dashboard/projects/forms/snippets/repository_js.jinja2' %}
                    {% else %}
                        {% if formDetails.form_schema == None and formDetails.form_mergetask != None and mergetaskdata.rescode < 0%}
                            {% include 'dashboard/projects/forms/snippets/merge_js.jinja2' %}
                        {% else %}
                            {% if processing > 0 %}
                                {% include 'dashboard/projects/forms/snippets/products_js.jinja2' %}
                            {% endif %}
                        {% endif %}
                    {% endif %}

                    {% if formDetails.form_schema != None %}
                        let example_stata_loaded = false;
                        let example_spss_loaded = false;
                        let example_r_loaded = false;
                        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                            if (e.target.getAttribute("href") === "#example-stata")
                                load_stata_example();
                            if (e.target.getAttribute("href") === "#example-spss")
                                load_spss_example();
                            if (e.target.getAttribute("href") === "#example-r")
                                load_r_example();
                        })
                        $('#apiexamples').on('shown.bs.modal', function () {
                            load_stata_example();
                        });

                        function load_stata_example() {
                            if (example_stata_loaded === false) {
                                example_stata_loaded = true;
                                let stata_editor = CodeMirror.fromTextArea(document.getElementById("stata_code"), {
                                    lineNumbers: true,
                                    matchBrackets: true,
                                    styleActiveLine: true,
                                    readOnly: true,
                                });
                            }
                        }
                        function load_spss_example() {
                            if (example_spss_loaded === false) {
                                example_spss_loaded = true;
                                let spss_editor = CodeMirror.fromTextArea(document.getElementById("spss_code"), {
                                    lineNumbers: true,
                                    matchBrackets: true,
                                    styleActiveLine: true,
                                    readOnly: true,
                                });
                            }
                        }
                        function load_r_example() {
                            if (example_r_loaded === false) {
                                example_r_loaded = true;
                                let r_editor = CodeMirror.fromTextArea(document.getElementById("r_code"), {
                                    lineNumbers: true,
                                    matchBrackets: true,
                                    styleActiveLine: true,
                                    readOnly: true,
                                    mode: 'r',
                                });
                            }
                        }
                    {% endif %}

                    {% if products|length > 0 %}

                        let editor = CodeMirror.fromTextArea(document.getElementById("error_code"), {
                            lineNumbers: true,
                            matchBrackets: true,
                            styleActiveLine: true,
                            readOnly: true,
                            mode: 'shell'
                        });

                        function product_buttons() {
                            let error_message = "";

                            $(".error_link").click(function() {
                                var task_id = $( this ).attr('data-task-id');
                                error_message = $('#error_' + task_id).val();
                            });


                            $("#product_error").on('shown.bs.modal', function() {
                                editor.getDoc().setValue(error_message);
                            });

                            {% if projectDetails.access_type < 4 %}
                                $('.delete-product').click(function () {
                                    var action_url = $(this).attr('urn');
                                    swal({
                                            title: "{{ _('Delete product') }}",
                                            text: "{{ _('Are you sure that you want to delete this product?') }}",
                                            type: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: "#DD6B55",
                                            confirmButtonText: "{{ _('Yes, delete it') }}",
                                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                            closeOnConfirm: true,
                                            closeOnCancel: true
                                        },
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                var form = document.createElement('form');
                                                form.setAttribute('method', 'post');
                                                form.setAttribute('action', action_url);
                                                form.style.display = 'hidden';

                                                var i = document.createElement("input"); //input element, text
                                                i.setAttribute('type', "text");
                                                i.setAttribute('name', "csrf_token");
                                                i.setAttribute('value', '{{ request.session.get_csrf_token() }}');
                                                form.appendChild(i);

                                                document.body.appendChild(form);
                                                $("#busy").show();
                                                form.submit();
                                            }
                                        });
                                });

                                $('.unpublish-product').click(function () {
                                    var action_url = $(this).attr('urn');
                                    swal({
                                            title: "{{ _('Unpublish product') }}",
                                            text: "{{ _('Are you sure that you want to unpublish this product?') }}",
                                            type: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: "#DD6B55",
                                            confirmButtonText: "{{ _('Yes, unpublish it') }}",
                                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                            closeOnConfirm: true,
                                            closeOnCancel: true
                                        },
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                var form = document.createElement('form');
                                                form.setAttribute('method', 'post');
                                                form.setAttribute('action', action_url);
                                                form.style.display = 'hidden';

                                                var i = document.createElement("input"); //input element, text
                                                i.setAttribute('type', "text");
                                                i.setAttribute('name', "csrf_token");
                                                i.setAttribute('value', '{{ request.session.get_csrf_token() }}');
                                                form.appendChild(i);

                                                document.body.appendChild(form);
                                                $("#busy").show();
                                                form.submit();
                                            }
                                        });
                                });

                                $('.publish-product').click(function () {
                                    var action_url = $(this).attr('urn');
                                    swal({
                                            title: "{{ _('Publish product') }}",
                                            {% if numsensitive > 0 %}
                                                text: "{{ _('Are you sure that you want to publish this product?') }}",
                                            {% else %}
                                                text: "{{ _('You do not have a single field marked as sensitive!') }}\n\n{{ _('IF YOU CONTINUE YOU MIGHT BE AT RISK OF MAKING SENSITIVE DATA PUBLICLY AVAILABLE!') }}\n\n{{('Are you sure that you want to publish this product?') }}",
                                            {% endif %}
                                            type: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: "#DD6B55",
                                            {% if numsensitive > 0 %}
                                                confirmButtonText: "{{ _('Yes, publish it') }}",
                                                {% else %}
                                                    confirmButtonText: "{{ _('Yes, I WILL TAKE THE RISK! Publish it') }}",
                                                {% endif %}
                                            cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                            closeOnConfirm: true,
                                            closeOnCancel: true
                                        },
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                var form = document.createElement('form');
                                                form.setAttribute('method', 'post');
                                                form.setAttribute('action', action_url);
                                                form.style.display = 'hidden';

                                                var i = document.createElement("input"); //input element, text
                                                i.setAttribute('type', "text");
                                                i.setAttribute('name', "csrf_token");
                                                i.setAttribute('value', '{{ request.session.get_csrf_token() }}');
                                                form.appendChild(i);

                                                document.body.appendChild(form);
                                                $("#busy").show();
                                                form.submit();
                                            }
                                        });
                                });
                            {% endif %}
                        }
                        product_buttons();
                    {% endif %}

                    bsCustomFileInput.init();

                    {% set active_tab = request.params.get('tab',None) %}
                    var mymap;
                    function load_map()
                    {
                        {% block form_load_map_function %}
                            mymap = L.map('projmap').setView([51.505, -0.09], 13);
                            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                                attribution: '© <a href="https://www.mapbox.com/about/maps/">Mapbox</a> © <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> <strong><a href="https://www.mapbox.com/map-feedback/" target="_blank">Improve this map</a></strong>',
                                tileSize: 512,
                                maxZoom: 18,
                                zoomOffset: -1,
                                id: 'mapbox/streets-v11',
                                accessToken: 'pk.eyJ1IjoicWxhbmRzIiwiYSI6ImNqZHB1ZDh4YzEwZHEyeG1rcjc0NmFsNzIifQ.i3YebmNDByns1c1ixZE0bA'
                            }).addTo(mymap);

                            var element = document.getElementById('mapbox');
                            var full_screen = false;
                            var normal_height = $("#projmap").height();
                            new ResizeSensor(element, function() {
                                var window_width = $(window).width();
                                var element_width =  element.clientWidth;
                                if ((element_width / window_width) >= 0.80)
                                {
                                    $("#projmap").height($(window).height()-80);
                                    mymap.invalidateSize();
                                    //console.log('Changed to ' + element.clientWidth);
                                    full_screen = true;
                                }
                                else
                                {
                                    if (full_screen)
                                    {
                                        $("#projmap").height(normal_height);
                                        mymap.invalidateSize();
                                        //console.log('Back to ' + normal_height);
                                        //console.log('Changed to ' + element.clientWidth);
                                        full_screen = false;
                                    }
                                }
                            });

                            function onMarkerClick(e) {
                                //alert(e.target.submission_id);

                                let info_url = "{{ request.route_url('get_submission_info', userid=projectDetails.owner, projcode=projectDetails.project_code, formid=formDetails.form_id, submissionid='to-change') }}";
                                let info_url_final = info_url.replace("to-change", e.target.submission_id) + " #submission_content";
                                $('#submission_content').html('{{ _('Loading...') }}');
                                $('#submission_content').load(info_url_final);

                                $('#submission_info').modal('show');
                                $('#maker_table_id').height('100px')
                            }

                            $.getJSON("{{ request.route_url('form_download_gpspoints',userid=projectDetails.owner, projcode=projectDetails.project_code, formid=formDetails.form_id) }}", function( data ) {
                                var markers = [];
                                data.points.forEach(function(entry)
                                {
                                    var latlng = L.latLng({ lat: entry.lati, lng: entry.long });
                                    var marker = L.marker(latlng).addTo(mymap);
                                    marker.submission_id = entry.key
                                    marker.on('click', onMarkerClick);
                                    //marker.bindPopup("<b>" + entry.key + "</b>");
                                    markers.push(marker);
                                });
                                var group = new L.featureGroup(markers);
                                mymap.fitBounds(group.getBounds());
                            });
                        {% endblock form_load_map_function %}
                    }


                    {% if formDetails.form_geopoint != None and formDetails.submissions > 0 and withgps > 0 %}
                        {% if active_tab == 'map' or active_tab == None %}
                            load_map();
                        {% else %}
                            $(".ibox").on('ibox-collapsed',function(){
                                var id = $(this).attr('id');
                                if (id === "maptab") {
                                    if (typeof mymap === 'undefined') {
                                        load_map();
                                    }
                                }
                            });
                        {% endif %}
                    {% endif %}

                    $(".collaborator-list").select2({
                        dropdownParent: $('#member_form')
                    });

                    $(".group-list").select2({
                        dropdownParent: $('#group_form')
                    });

                    {% if projectDetails.access_type < 4 %}
                        var elem = document.querySelector('.js-switch');
                        var overwrite_switch = new Switchery(elem, { color: '#1AB394' });
                        {% if projectDetails.project_case == 1 %}
                            {% if formDetails.form_casetype != 1 %}
                                {% if formDetails.form_caseselectorfilename == "barcode" %}
                                    var elem2 = document.querySelector('.js-switch-casecsv');
                                    if (elem2 != null)
                                        var casecsv_switch = new Switchery(elem2, { color: '#1AB394' });
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    {% endif %}

                    {% if projectDetails.access_type < 4 %}
                        $('.remove_form').click(function () {
                            var action_url = $( this ).attr('urn');
                            var title = "{{ _('Are you sure?') }}";
                            var text = "{{ _('All the data in this form will be deleted!') }}";
                            {% if formDetails.parent_form != None and formDetails.form_schema != None %}
                                text = "{{ _('Warning, you are going to delete a form that is a subversion of another form. This means that you will REMOVE ALL the data, including previous versions of the data as well!!!') }}";
                                title = "{{ _('Are you sure, really really sure?') }}";
                            {% endif %}
                            swal({
                                    title: title,
                                    text: text,
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "{{ _('Yes, delete this form!') }}",
                                    cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                    closeOnConfirm: true,
                                    closeOnCancel: true },
                                function (isConfirm) {
                                    if (isConfirm) {
                                        var form = document.createElement('form');
                                        form.setAttribute('method', 'post');
                                        form.setAttribute('action', action_url);
                                        form.style.display = 'hidden';

                                        var i = document.createElement("input"); //input element, text
                                        i.setAttribute('type',"text");
                                        i.setAttribute('name',"csrf_token");
                                        i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                        form.appendChild(i);

                                        document.body.appendChild(form);
                                        $("#busy").show();
                                        form.submit();
                                    }
                                });
                        });
                    {% endif %}

                    {% if projectDetails.access_type < 4 %}
                        $(".file-item").on("taphold", function()
                        {
                            var action_url = $( this ).attr('urn');
                            swal({
                                    title: "{{ _('Are you sure?') }}",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "{{ _('Yes, remove it!') }}",
                                    cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                    closeOnConfirm: true,
                                    closeOnCancel: true },
                                function (isConfirm) {
                                    if (isConfirm) {
                                        var form = document.createElement('form');
                                        form.setAttribute('method', 'post');
                                        form.setAttribute('action', action_url);
                                        form.style.display = 'hidden';

                                        var i = document.createElement("input"); //input element, text
                                        i.setAttribute('type',"text");
                                        i.setAttribute('name',"csrf_token");
                                        i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                        form.appendChild(i);

                                        document.body.appendChild(form);
                                        $("#busy").show();
                                        form.submit();
                                    }
                                });
                        });
                    {% endif %}

                    $('#edit_assistant_details').click(function () {
                        var assistant_edit_url = $(this).attr('urn');
                        location.href = assistant_edit_url;
                    });


                    var assistant_item = $(".assistant-item");

                    assistant_item.click(function() {
                        var assistant_name = $( this ).attr('data-assistant-name');
                        var assistant_can_clean = $( this ).attr('data-assistant-can-clean');
                        var action_url = $( this ).attr('urn');
                        $("#edit_assistant_form").prop('action',action_url)
                        $("#rolewho").text("{{ _('Changing the role of') }} " + assistant_name);

                        {% if projectDetails.project_formlist_auth == 1 %}
                            var assistant_can_submit = $( this ).attr('data-assistant-can-submit');
                            var role_submmit = $( "#role_submmit" );
                            role_submmit.prop( "checked", false );
                            if (assistant_can_submit === "1")
                                role_submmit.prop( "checked", true );
                        {% endif %}

                        var assistant_access_type = parseInt($(this).attr('data-assistant-access_type'));
                        if (assistant_access_type < 4)
                        {
                            $("#edit_assistant_details").prop('disabled', false)
                            $("#assistant_readonly_note").hide();
                            var assistant_edit_url = $(this).attr('data-assistant_edit_url');
                            $("#edit_assistant_details").attr("urn",assistant_edit_url)
                        }
                        else
                        {
                            var project_name = $(this).attr('data-assistant-project_name');
                            var owner_name = $(this).attr('data-assistant-owner_name');
                            $("#assistant_project_name").text(project_name)
                            $("#assistant_owner_name").text(owner_name)
                            $("#assistant_readonly_note").show();
                            $("#edit_assistant_details").prop('disabled', true)
                        }



                        var role_clean = $( "#role_clean" );
                        role_clean.prop( "checked", false );
                        if (assistant_can_clean === "1")
                            role_clean.prop( "checked", true );
                    });
                    {% if projectDetails.access_type < 4 %}
                        assistant_item.on("taphold", function()
                        {
                            var action_url = $( this ).attr('data-assistant-remove-url');
                            swal({
                                    title: "{{ _('Are you sure?') }}",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "{{ _('Yes, remove it!') }}",
                                    cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                    closeOnConfirm: true,
                                    closeOnCancel: true },
                                function (isConfirm) {
                                    if (isConfirm) {
                                        var form = document.createElement('form');
                                        form.setAttribute('method', 'post');
                                        form.setAttribute('action', action_url);
                                        form.style.display = 'hidden';

                                        var i = document.createElement("input"); //input element, text
                                        i.setAttribute('type',"text");
                                        i.setAttribute('name',"csrf_token");
                                        i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                        form.appendChild(i);

                                        document.body.appendChild(form);
                                        $("#busy").show();
                                        form.submit();
                                    }
                                });
                        });
                    {% endif %}

                    var group_item = $(".group-item");

                    group_item.click(function() {
                        var group_name = $( this ).attr('data-group-name');

                        var group_can_clean = $( this ).attr('data-group-can-clean');
                        var action_url = $( this ).attr('urn');
                        $("#edit_group_form").prop('action',action_url)
                        $("#grprolewho").text("{{ _('Changing the role of') }} " + group_name);

                        {% if projectDetails.project_formlist_auth == 1 %}
                            var group_can_submit = $( this ).attr('data-group-can-submit');
                            var role_submmit = $( "#grp_role_submmit" );
                            role_submmit.prop( "checked", false );
                            if (group_can_submit === "1")
                                role_submmit.prop( "checked", true );
                        {% endif %}

                        var role_clean = $( "#grp_role_clean" );
                        role_clean.prop( "checked", false );
                        if (group_can_clean === "1")
                            role_clean.prop( "checked", true );
                    });
                    {% if projectDetails.access_type < 4 %}
                        group_item.on("taphold", function()
                        {
                            var action_url = $( this ).attr('data-group-remove-url');
                            swal({
                                    title: "{{ _('Are you sure?') }}",
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "{{ _('Yes, remove it!') }}",
                                    cancelButtonText: "{{ _('Oops!, cancel!') }}",
                                    closeOnConfirm: true,
                                    closeOnCancel: true },
                                function (isConfirm) {
                                    if (isConfirm) {
                                        var form = document.createElement('form');
                                        form.setAttribute('method', 'post');
                                        form.setAttribute('action', action_url);
                                        form.style.display = 'hidden';

                                        var i = document.createElement("input"); //input element, text
                                        i.setAttribute('type',"text");
                                        i.setAttribute('name',"csrf_token");
                                        i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                                        form.appendChild(i);

                                        document.body.appendChild(form);
                                        $("#busy").show();
                                        form.submit();
                                    }
                                });
                        });
                    {% endif %}
                    {% if request.registry.settings['allow.partner.access'] == "True" %}
                        {% include 'dashboard/projects/forms/snippets/link_partner_js.jinja2' %}
                        {% include 'dashboard/projects/forms/snippets/edit_link_partner_js.jinja2' %}
                    {% endif %}
                {% endblock odk_scripts %}
            });
        </script>
        {% block other_odk_scripts %}

        {% endblock other_odk_scripts %}
    {% else %}
        {% block form_scripts_other %}

        {% endblock form_scripts_other %}
    {% endif %}


{% endblock scripts %}