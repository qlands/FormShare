{% for product in products %}
    {% for output in product.outputs %}
        {% if output.status == -1 %}
            {% set task_id = output.celery_taskid | replace("-","_") %}
            client{{ task_id }} = new Paho.MQTT.Client("{{ request.server_name }}", Number(9001), "clientId");
            client{{ task_id }}.onMessageArrived = onMessageArrived{{ task_id }};
            client{{ task_id }}.connect({onSuccess:onConnect{{ task_id }}, userName : "formshare_client", password : "read_only"});
            function onConnect{{ task_id }}() {
                client{{ task_id }}.subscribe("formshare/{{ output.celery_taskid }}");
            }
            function onMessageArrived{{ task_id }}(message) {
                if ((message.payloadString === "success") || (message.payloadString === "failure"))
                {
                    $('#feed_element_{{ output.celery_taskid }}').load('{{ request.url }} #feed_element_{{ output.celery_taskid }}',function(){
                      product_buttons()
                    });
                }
                else
                {
                    $("#sse_{{ output.celery_taskid }}").text(message.payloadString);
                }
            }
        {% endif %}
    {% endfor %}
{% endfor %}


let $element2 = $('.sse-message');
function fadeInOut2 () {
    $element2.fadeIn(1000, function () {
        $element2.fadeOut(1500, function () {
            $element2.fadeIn(1500, function () {
                setTimeout(fadeInOut2, 500);
            });
        });
    });
}
fadeInOut2();

$('.cancel-task').click(function () {
    var action_url = $( this ).attr('urn');
    swal({
            title: "{{ _('Cancel the process') }}",
            text: "{{ _('Are you sure that you want to cancel this process') }}",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "{{ _('Yes, stop the process') }}",
            cancelButtonText: "{{ _('Oops!, cancel!') }}",
            closeOnConfirm: true,
            closeOnCancel: true },
        function (isConfirm) {
            if (isConfirm) {
                var form = document.createElement('form');
                form.setAttribute('method', 'post');
                form.setAttribute('action', action_url);
                form.style.display = 'hidden';

                var i = document.createElement("input"); //input element, text
                i.setAttribute('type',"text");
                i.setAttribute('name',"csrf_token");
                i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                form.appendChild(i);

                document.body.appendChild(form);
                form.submit();
            }
        });
});