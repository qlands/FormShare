version: 2
jobs:
  py-3.10: &build-template
    docker:
      - image: qlands/odktools_circleci:20240908
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
        environment:
          - bootstrap.memory_lock=true
          - discovery.type=single-node
          - http.host=0.0.0.0
          - transport.host=127.0.0.1
          - xpack.security.enabled=false
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ports:
          - 9200:9200
      - image: mysql:8.0.23
        command: "--default-authentication-plugin=mysql_native_password"
        cap_add:
          - SYS_NICE
        environment:
          - MYSQL_ROOT_PASSWORD=circleci
        ports:
          - 3306:3306
    resource_class: large
    working_directory: ~/work
    steps:
      - checkout
      - run: | # We will just build master-2.0 branch
          if [ $CIRCLE_BRANCH != 'master-2.0' ]; then
            exit 1
          fi
      - restore_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
      - run:          
          name: Run servers
          command: |
            sudo chown -R redis /etc/redis
            sudo chgrp -R redis /etc/redis            
            sudo chown -R redis /var/log/redis
            sudo chgrp -R redis /var/log/redis            
            sudo chown -R redis /var/lib/redis
            sudo chgrp -R redis /var/lib/redis
            sudo /etc/init.d/redis-server start
            sudo service mosquitto start
            tail -f /dev/null
          background: true
      - run:
          # Install dependencies with --user to enable easier caching
          name: Install dependencies
          command: |
            sudo chown -R circleci /opt/formshare_repository
            sudo chown -R circleci /opt/formshare_log
            sudo chown -R circleci /opt/formshare_celery
            sudo chown -R circleci /opt/formshare_gunicorn
            sudo chown -R circleci /opt/formshare_config            
            sudo chgrp -R circleci /opt/formshare_repository
            sudo chgrp -R circleci /opt/formshare_log
            sudo chgrp -R circleci /opt/formshare_celery
            sudo chgrp -R circleci /opt/formshare_gunicorn
            sudo chgrp -R circleci /opt/formshare_config
            pip install -r requirements.txt --user
            pip install codecov --user
            /home/circleci/.local/bin/codecov
            mysql -h 127.0.0.1 -u root --ssl-mode=DISABLED --password=circleci --execute='CREATE SCHEMA IF NOT EXISTS formshare'
            mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -h 127.0.0.1 -u root --password=circleci mysql
            python3 create_config.py --daemon --capture_output --mysql_host 127.0.0.1 --mysql_user_name root --mysql_user_password circleci --repository_path /opt/formshare_repository --odktools_path /opt/odktools --elastic_search_host localhost --elastic_search_port 9200 --formshare_host localhost --formshare_port 5900 --forwarded_allow_ip localhost --pid_file /opt/formshare_gunicorn/formshare.pid --error_log_file /opt/formshare_log/error_log /opt/formshare_config/development.ini
            ln -s /opt/formshare_config/development.ini ./development.ini
            python3 ./download_nltk_packages.py
            python3 configure_celery.py ./development.ini
            python3 configure_flatten.py
            python3 setup.py install --user
            python3 setup.py compile_catalog
            /home/circleci/.local/bin/disable_ssl ./development.ini
            /home/circleci/.local/bin/configure_alembic ./development.ini .
            /home/circleci/.local/bin/configure_mysql ./development.ini .
            /home/circleci/.local/bin/configure_tests ./development.ini .
            /home/circleci/.local/bin/alembic upgrade head
            pip install -e git+https://github.com/qlands/formshare_test_plugin.git@main#egg=formshare_test_plugin --user
      - run:
          name: Test code is well formatted
          command: |
            /home/circleci/.local/bin/black --version
            /home/circleci/.local/bin/black formshare --check || exit;
      - run:
          name: Run Celery in the background
          command: |
            export COLUMNS=80
            export FORMSHARE_PYTEST_RUNNING=true
            /home/circleci/.local/bin/celery -A formshare.config.celery_app worker --loglevel=info -Q FormShare
          background: true
      - run:
          name: Run tests
          command: |
            export FORMSHARE_PYTEST_RUNNING=true
            /home/circleci/.local/bin/pytest -s --cov=formshare
      - run:
          name: upload coverage report
          command: |
            /home/circleci/.local/bin/coverage xml
            (/home/circleci/.local/bin/codecov --required -X search gcov pycov -f coverage.xml) || echo 'Codecov failed to upload'
      - run:
          name: Building artifacts
          command: |
            python3 setup.py sdist
            python3 setup.py bdist_wheel
      - store_artifacts:
          path: dist/
          destination: ./
      - save_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/.local/lib
            - /home/circleci/.local/bin
workflows:
  version: 2
  build:
    jobs:
      - py-3.10