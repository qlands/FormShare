{% extends 'assistant/page.jinja2' %}
{% import 'dashboard/macros/form.jinja2' as form %}

{% block title %}
    <title>{{ _('Clean data') }}</title>
{% endblock title %}

{% block css %}
    {{ super() }}
    {% if table == None %}
        {% cssresource request,'formshare','select2' %}
    {% else %}
        {% cssresource request,'formshare','select2' %}
        {% cssresource request,'formshare','jqgrid_bootstrap' %}
    {% endif %}
    <style>
        input { height: 30px !important; }
    </style>
{% endblock css %}

{% block topScripts %}
    {{ super() }}
    {% if table == None %}
        {% jsresource request,'formshare','select2' %}
    {% else %}
        {% jsresource request,'formshare','select2' %}
        {% jsresource request,'formshare','jqgrid' %}
        {% jsresource request,'formshare','multiselect' %}
    {% endif %}
{% endblock topScripts %}

{% block breadcrumbs %}
    {% include 'assistant/clean/snippets/brdcrbs_clean.jinja2' %}
{% endblock breadcrumbs %}

{% block maincontent %}
    <div class="ibox">
        <div class="ibox-title">
            <h5>{{ _('Clean ') }} "{{ formData.form_name }}"</h5>
            <div class="ibox-tools">
                <a class="collapse-link" style="margin-right: 10px">
                    <i class="fa fa-chevron-up"></i>
                </a>
                <a class="fullscreen-link">
                    <i class="fa fa-expand"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content" id="ibox-content">
            <div class="row">
                <div class="col-md-6">
                    <form class="dataset-form form-horizontal add-member-form require_busy" method='post' action="{{ request.url }}">
                        <input type="hidden" name="csrf_token" value="{{ token }}">
                        <div class="form-group">
                            <label>{{ _('Table') }}</label>
                            <select style="width: 100%" id="table" name="table" data-module="autocomplete" data-module-dropdown-class="lang-dropdown" data-module-container-class="lang-container">
                                {% for table in tables %}
                                    <option value="{{ table.name }}" {% if table.name == currtable %} selected {% endif %} >{{ table.desc }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div>
                            <button type="submit" name="loadtable" class="btn btn-primary">{{ _('Load table') }}</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-6">
                    {% if table != None %}
                        <form class="dataset-form form-horizontal add-member-form require_busy" method='post' action="{{ request.url }}">
                            <input type="hidden" name="csrf_token" value="{{ token }}">
                            <div class="form-group">
                                <label>{{ _('Fields') }}</label>
                                <select id="fields" data-module="autocomplete" name="fields" multiple="multiple" style="width: 100%">
                                    {% for field in fields %}
                                        <option value="{{ field.name }}" {% if field.checked %} selected {% endif %} >{{ field.desc|truncate(30,true,'...') }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div>
                                <button type="submit" name="loadfields" class="btn btn-primary">{{ _('Load fields') }}</button>
                            </div>
                        </form>
                    {% endif %}
                </div>
            </div>
            {% if table != None %}
                <hr>
                <table style="max-width: 500px" id="jqGrid"></table>
                <div id="jqGridPager"></div>
            {% else %}
                {{ _('Please load a table') }}
            {% endif %}
        </div>
    </div>
    {% include 'assistant/clean/snippets/update_form.jinja2' %}
{% endblock maincontent %}


{%- block scripts %}
    {{ super() }}
    <script>
        $("#table").select2({
                dropdownParent: $('#ibox-content')
            });
        $("#fields").select2(
            {
                dropdownParent: $('#ibox-content')
            }
        );
        {% if table != None %}
            //Construct the editor

            $(document).ready(function () {
                let pulled_data = [];
                $("#jqGrid").jqGrid({
                    url: "{{ request.route_url('request',userid=userid,projcode=projcode,formid=formid,tablename=table) }}",
                    mtype: "POST",
                    postData: {csrf_token: '{{ request.session.get_csrf_token() }}'},
                    styleUI : 'Bootstrap4',
                    iconSet: 'fontAwesome',
                    datatype: "jsonp",
                    loadComplete: function(data) {
                        pulled_data = data.rows;
                    },
                    colModel: [
                        {% if checked == 0 %}
                            {% for field in fields -%}
                                {% if field.name != "rowuuid" %}
                                    {label: '{{ field.desc|truncate(30,true,'...') }}', name: '{{ field.name }}' , key: false, editable: {{ field.editable }},
                                        {% if field.rlookup == 'true' %}
                                            formatter:'select',
                                            edittype:'select',
                                            editoptions : {
                                                value: {{ field.lookupvalues }}
                                            }
                                        {% else %}
                                            {% if field.field_selecttype != 0 %}
                                                edittype:'button',
                                                editoptions : {
                                                    mseltable_name: '{{ table }}_msel_{{ field.name }}',
                                                    table_name: '{{ table }}',
                                                    dataInit: function (elem) {
                                                        $(elem).click(function () {
                                                            $("#update_title").text('{{ _("Update multi select field") }} "{{ field.desc }}"');
                                                            let info_url = "{{ request.route_url('cleanmultiselect', userid=userid, projcode=projcode, formid=formid, table='table-to-change', mseltable= 'mseltable-to-change',rowuuid='rowuuid-to-change') }}";
                                                            let info_url_final = info_url.replace("mseltable-to-change", $(elem).attr("mseltable_name")) + " #msel_content";
                                                            info_url_final = info_url_final.replace("rowuuid-to-change",$(elem).attr("rowid"))
                                                            info_url_final = info_url_final.replace("table-to-change",$(elem).attr("table_name"))
                                                            $('#multi_select_content').html('{{ _('Loading...') }}');
                                                            $('#multi_select_content').load(info_url_final, function() {
                                                                $('#multiselect').multiselect({keepRenderingSort: true, sort: false});
                                                            });
                                                            $('#update_form').modal('show');
                                                        });
                                                    }
                                                }
                                            {% endif %}
                                        {% endif %}
                                    },
                                {% endif %}
                            {% endfor -%}
                        {% else %}
                            {% for field in fields -%}
                                {% if field.checked -%}
                                    {% if field.name != "rowuuid" %}
                                        {label: '{{ field.desc|truncate(30,true,'...') }}', name: '{{ field.name }}' , key: false, editable: {{ field.editable }},
                                            {% if field.rlookup == 'true' %}
                                                formatter:'select',
                                                edittype:'select',
                                                editoptions : {
                                                    value: {{ field.lookupvalues }}
                                                }
                                            {% else %}
                                                {% if field.field_selecttype != 0 %}
                                                    edittype:'button',
                                                    editoptions : {
                                                        mseltable_name: '{{ table }}_msel_{{ field.name }}',
                                                        table_name: '{{ table }}',
                                                        dataInit: function (elem) {
                                                            $(elem).click(function () {
                                                                $("#update_title").text('{{ _("Update multi select field") }} "{{ field.desc }}"');
                                                                let info_url = "{{ request.route_url('cleanmultiselect', userid=userid, projcode=projcode, formid=formid, table='table-to-change', mseltable= 'mseltable-to-change',rowuuid='rowuuid-to-change') }}";
                                                                let info_url_final = info_url.replace("mseltable-to-change", $(elem).attr("mseltable_name")) + " #msel_content";
                                                                info_url_final = info_url_final.replace("rowuuid-to-change",$(elem).attr("rowid"))
                                                                info_url_final = info_url_final.replace("table-to-change",$(elem).attr("table_name"))
                                                                $('#multi_select_content').html('{{ _('Loading...') }}');
                                                                $('#multi_select_content').load(info_url_final, function() {
                                                                    $('#multiselect').multiselect({keepRenderingSort: true, sort:false});
                                                                });
                                                                $('#update_form').modal('show');
                                                            });
                                                        }
                                                    }
                                                {% endif %}
                                            {% endif %}
                                        },
                                    {% endif %}
                                {% endif -%}
                            {% endfor -%}
                        {% endif %}
                        {label: 'Row unique ID', name: 'rowuuid', key: true, editable: false}
                    ],
                    viewrecords: true,
                    height: 'auto',
                    rowNum: 10,
                    pager: "#jqGridPager",
                    shrinkToFit: false,
                    autowidth: true,
                    editurl: "{{ request.route_url('action',userid=userid,projcode=projcode,formid=formid,tablename=table) }}",
                });


                $('#jqGrid').navGrid('#jqGridPager',
                    // the buttons to appear on the toolbar of the grid
                    { edit: true, add: false, del: false, search: true, refresh: false, view: false, position: "left", cloneToTop: false,
                        edittitle: "{{ _('Edit selected row') }}",
                        searchtitle: "{{ _('Find records') }}",
                        alertcap: "{{ _('Warning') }}",
                        alerttext: "{{ _('Please, select row') }}"
                    },
                    {
                        editCaption: "{{ _('Edit row') }}",
                        bSubmit: "{{ _('Submit') }}",
                        bCancel: "{{ _('Cancel') }}",
                        bClose: "{{ _('Close') }}",
                        saveData: "{{ _('Data has been changed! Save changes?') }}",
                        bYes : "{{ _('Yes') }}",
                        bNo : "{{ _('No') }}",
                        bExit : "{{ _('Cancel') }}",
                        width: 'auto',
                        height: 400,
                        dataheight: 300,
                        onclickSubmit: function () {
                            return {csrf_token: '{{ request.session.get_csrf_token() }}'};
                        },
                        serializeEditData: function(postedData) {
                            let rowuuid = postedData.id;
                            for (let row in pulled_data) {
                                if (pulled_data[row]['rowuuid'] === rowuuid)
                                {
                                    let section = pulled_data[row];
                                    Object.keys(section).forEach(function (key) {
                                        if (postedData[key]) {
                                            let current_value = section[key];
                                            if (current_value != null) {
                                                if (current_value == postedData[key]) {
                                                    delete postedData[key];
                                                }
                                            }
                                            else {
                                                if (postedData[key] === '')
                                                {
                                                    delete postedData[key]
                                                }
                                            }
                                        }
                                        else {
                                            delete postedData[key]
                                        }
                                    });
                                }
                            }
                            return postedData;
                        }
                    },
                    {},
                    {},
                    {
                        caption: "{{ _('Search') }}",
                        sopt: ['like','notlike'],
                        odata: [{ oper:'like', text:"{{ _('like') }}"}, { oper:'notlike', text:"{{ _('not like') }}"}],
                    });
            });
        {% endif %}
    </script>
{% endblock scripts -%}