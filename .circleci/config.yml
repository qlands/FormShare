version: 2
jobs:
  py-3.8: &build-template
    docker:
      - image: qlands/odktools_circleci:20210501
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
    working_directory: ~/work
    steps:
      - checkout
      - restore_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
      - run:          
          name: Run servers
          command: |
            sudo service elasticsearch start
            sudo /etc/init.d/redis-server start
            sudo service mongodb start
            sudo service mysql start
      - run:
          # Install dependencies with --user to enable easier caching
          name: Install dependencies
          command: |
            pip install -r requirements.txt --user
            mysql -h localhost -u root --ssl-mode=DISABLED --password=circleci --execute='CREATE SCHEMA IF NOT EXISTS formshare'
            python3 create_config.py --daemon --capture_output --mysql_host localhost --mysql_user_name root --mysql_user_password circleci --repository_path /opt/formshare_repository --odktools_path /opt/odktools --elastic_search_host localhost --elastic_search_port 9200 --formshare_host localhost --formshare_port 5900 --forwarded_allow_ip localhost --pid_file /opt/formshare_gunicorn/formshare.pid --error_log_file /opt/formshare_log/error_log /opt/formshare_config/development.ini
            ln -s /opt/formshare_config/development.ini ./development.ini
            python3 configure_celery.py ./development.ini
            python3 setup.py install --user
            /home/circleci/.local/bin/disable_ssl ./development.ini
            /home/circleci/.local/bin/configure_alembic ./development.ini .
            /home/circleci/.local/bin/configure_mysql ./development.ini .
            /home/circleci/.local/bin/configure_tests ./development.ini .
            /home/circleci/.local/bin/alembic upgrade head
            /etc/init.d/celery_formshare stop
            /etc/init.d/celery_formshare start
      - run:
          name: Test code is well formatted
          command: |
            /home/circleci/.local/bin/black --version
            /home/circleci/.local/bin/black formshare --check || exit;
      - run:
          name: Run tests
          command: |            
            export FORMSHARE_PYTEST_RUNNING=true
            /home/circleci/.local/bin/pytest --coverage=formshare
      - run:
          name: Building artifacts
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - store_artifacts:
          path: dist/
          destination: ./
      - save_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/.local/lib
            - /home/circleci/.local/bin
workflows:
  version: 2
  build:
    jobs:
      - py-3.8