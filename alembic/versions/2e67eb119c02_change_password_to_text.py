"""Change password to text

Revision ID: 2e67eb119c02
Revises: 7a782be521c1
Create Date: 2019-10-02 21:57:30.066310

"""
import sqlalchemy as sa
from alembic import context
from alembic import op
from pyramid.paster import get_appsettings, setup_logging
from sqlalchemy.dialects import mysql
from sqlalchemy.orm.session import Session

from formshare.config.encdecdata import encode_data_with_key, old_decode_data_with_key
from formshare.models.formshare import User, Collaborator

# revision identifiers, used by Alembic.
revision = "2e67eb119c02"
down_revision = "7a782be521c1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    config_uri = context.config.get_main_option("formshare.ini.file", None)
    if config_uri is None:
        print(
            "This migration needs parameter 'formshare.ini.file' in the alembic ini file."
        )
        print(
            "The parameter 'formshare.ini.file' must point to the full path of the FormShare ini file"
        )
        exit(1)

    setup_logging(config_uri)
    settings = get_appsettings(config_uri, "formshare")
    aes_key = settings["aes.key"].encode()

    op.alter_column(
        "collaborator",
        "coll_password",
        existing_type=mysql.VARCHAR(length=120),
        type_=sa.UnicodeText,
        existing_nullable=True,
    )
    op.alter_column(
        "fsuser",
        "user_password",
        existing_type=mysql.VARCHAR(length=120),
        type_=sa.UnicodeText,
        existing_nullable=True,
    )
    session = Session(bind=op.get_bind())

    # Migrate users password to the new encoding
    users = session.query(User.user_id, User.user_password).all()
    for user in users:
        un_encrypted = old_decode_data_with_key(user.user_password, aes_key)
        encrypted = encode_data_with_key(un_encrypted, aes_key)
        session.query(User).filter(User.user_id == user.user_id).update(
            {"user_password": encrypted}
        )

    # Migrate collaborators password to the new encoding
    collaborators = session.query(
        Collaborator.project_id, Collaborator.coll_id, Collaborator.coll_password
    ).all()
    for collaborator in collaborators:
        un_encrypted = old_decode_data_with_key(collaborator.coll_password, aes_key)
        encrypted = encode_data_with_key(un_encrypted, aes_key)
        session.query(Collaborator).filter(
            Collaborator.project_id == collaborator.project_id
        ).filter(Collaborator.coll_id == collaborator.coll_id).update(
            {"coll_password": encrypted}
        )
    session.commit()

    # ### end Alembic commands ###


def downgrade():
    print("Warning! No downgrade possible")
    # ### end Alembic commands ###
